nth                   package:dplyr                    R Documentation

_E_x_t_r_a_c_t _t_h_e _f_i_r_s_t, _l_a_s_t _o_r _n_t_h _v_a_l_u_e _f_r_o_m _a _v_e_c_t_o_r

_D_e_s_c_r_i_p_t_i_o_n:

     These are straightforward wrappers around ‘[[’. The main advantage
     is that you can provide an optional secondary vector that defines
     the ordering, and provide a default value to use when the input is
     shorter than expected.

_U_s_a_g_e:

     nth(x, n, order_by = NULL, default = default_missing(x))
     
     first(x, order_by = NULL, default = default_missing(x))
     
     last(x, order_by = NULL, default = default_missing(x))
     
_A_r_g_u_m_e_n_t_s:

       x: A vector

       n: For ‘nth()’, a single integer specifying the position.
          Negative integers index from the end (i.e. ‘-1L’ will return
          the last value in the vector).

          If a double is supplied, it will be silently truncated.

order_by: An optional vector used to determine the order

 default: A default value to use if the position does not exist in the
          input. This is guessed by default for base vectors, where a
          missing value of the appropriate type is returned, and for
          lists, where a ‘NULL’ is return.

          For more complicated objects, you'll need to supply this
          value. Make sure it is the same type as ‘x’.

_V_a_l_u_e:

     A single value. ‘[[’ is used to do the subsetting.

_E_x_a_m_p_l_e_s:

     x <- 1:10
     y <- 10:1
     
     first(x)
     last(y)
     
     nth(x, 1)
     nth(x, 5)
     nth(x, -2)
     nth(x, 11)
     
     last(x)
     # Second argument provides optional ordering
     last(x, y)
     
     # These functions always return a single value
     first(integer())
     

